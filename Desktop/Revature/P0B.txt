/////////////////////////////////////////////////////////////////
 //
 // Name: Project 0 Bravo
 // Author: Sandra George (norabasil@yahoo.com)
 // Date: 9/21/2020
 // Description: Series of apex methods to demonstrate
 // basic understanding of coding concepts.
 //


public class P0B {
    
    public static Integer nFibonacci(Integer n){
        
        integer num1=0;
        integer num2=1;
        if(n==num1){
            return 0;
        }
        if(n==num2){
            return 1;
        }
        for(integer i=1; i<n; i++){
            integer previousTwo = num1 + num2;
            num1=num2;
            num2=previousTwo;
        }
        System.debug(num2);
        return num2;
      
   }
   public static List<Integer> sortList( List<Integer> intList ) {
       for(integer i =0; i<intList.size()-1; i++){
           integer min = i;
           for(integer j = i+1; j<intList.size();j++){
               if(intList[j] < intList[min]){
                   min = j;
               }
              	
           }
           integer temp = intList[min];
           intList[min]= intList[i];
           intList[i]=temp;
       }
       return intList;
           
   }
    public static Integer nFactorial( Integer n) {
        integer f = 1 ;
        for(integer i = 1; i<=n; i++){
            f = f *i;
        }
       return f;
        
        
    
        
    }
   public static List<Integer> rotateLeftNTimes( List<Integer> nList, Integer n) {
       for(integer i = 0; i<n; i++){
           integer last = nList.size()-1;
           integer first = nList[0];
           for(integer j = 0; j< nList.size()-1; j++){
               nList[j]=nList[j+1];
           }
      	    nList[last]=first;
       }
      
       return nList;
       
   }
    public static Boolean bracketsAreBalanced( String s ){
        integer paren=0;
        integer square = 0;
       integer curly=0;
        integer sum;
        for(integer i =0; i< s.length(); i++){
            integer charAscii = s.charAt(i);
            if(s.charAt(i)==40){
                paren+=1;
            }else if(s.charAt(i)== 41){
                paren-=1;
            }else if(s.charAt(i)== 123){
                curly+=1;
            }else if(s.charAt(i)==125){
                curly-=1;
            }else if(s.charAt(i)==91){
                square+=1;
            }else{
                square-=1;
            }
        }
        sum=square + curly+ paren;
        return sum==0;
    }
    
  
    public static void updateAccountSize(){
     	List<Account> ulist = [SELECT name, AnnualRevenue FROM Account];
        for(Account a : ulist){
            if(a.NumberOfEmployees >= 1 && a.NumberOfEmployees <= 1000){
                a.Size__c = 'small';
            }
            else if(a.NumberOfEmployees >= 1001 && a.NumberOfEmployees <= 10000){
                a.Size__c = 'medium';
            }
            else{
                a.Size__c = 'large';
            }
            
        } update ulist;
	}
    
    public static void updateCALeads( ){
        List<Lead> llist = [SELECT name, AnnualRevenue FROM Lead where State like '%ca%'];
        for(Lead d: llist ){
            d.Status='Closed';
            System.debug('We are no longer doing business in California.');
            
         }
        update llist;
    }
    public static void closePastDueOpportunities( ) {
        List<opportunity> olist = [SELECT name from opportunity where CloseDate < TODAY];
        for(opportunity o : olist){
            if(o.StageName =='Closed Won'){
                o.StageName ='Closed Lost';
            }
        }
        update olist;
    }
   
    
    
   
    
   
}